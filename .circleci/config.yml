version: 2.4

jobs:
  build:
    docker:
      - image: node:18.13.0
    environment:
      COVERALLS_REPO_TOKEN: 4Gyz2UxXVZy87gPU1thYWmwlEUo0TsawY
    working_directory: ~/mybrand/learn-express# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      #- run: npm run build --if-present
      - run: npm run test:coveralls
    steps:
      - checkout:
          path: ~/mybrand
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Run tests
          command: npm test --coverage -- --verbose
      - run:
          name: Upload coverage to Coveralls
          command: npx coveralls < coverage/lcov.info

# version: 2.1
# orbs:
#   node: circleci/node@5.0.2
#   heroku: circleci/heroku@1.2.6

# jobs:
#   build_and_test:
#     executor: node/default
#     steps:
#       - checkout
#       - node/install-packages:
#           pkg-manager: npm
#       - run:
#           command: npm run test
#           name: Run tests
#       - run: server.test.js
#           command: npm run build
#           name: Build index.js
#       - persist_to_workspace:
#           root: ~/learn-express
#           paths:
#             - .

#   deploy: # this can be any name you choose
#     executor: heroku/default
#     steps:
#       - attach_workspace:
#           at: ~/learn-express
#       - heroku/deploy-via-git:
#           force: true # force push when pushing to the heroku remote, see: https://devcenter.heroku.com/articles/git

# workflows:
#   test_my_app:
#     jobs:
#       - build_and_test
#       - deploy:
#           requires:
#             - build_and_test # only deploy if the build_and_test job has completed
#           filters:
#             branches:
#               only: ft-node-endpoints # only deploy when on main
